package main

import (
    "encoding/json"
    "fmt"
    "io/ioutil"
    "log"
    "net/http"
    //"strings"
    "net/url"
    "reflect"
)

const (
    URL     = "https://api.gnavi.co.jp/master/PrefSearchAPI/v3/"
    CONSUMER_KEY = "e33d36e16e80413abfaf5caa66d49e66"
)

type AutoGenerated struct {
    Attributes struct {
        APIVersion string `json:"api_version"`
    } `json:"@attributes"`
    Pref []struct {
        PrefCode string `json:"pref_code"`
        PrefName string `json:"pref_name"`
        AreaCode string `json:"area_code"`
    } `json:"pref"`
}

func main() {
    // URL生成
    values := url.Values{}
    values.Add("keyid", CONSUMER_KEY)
    fmt.Println(values.Encode())
    resp, err := http.Get(URL + "?" + values.Encode())
    fmt.Println(reflect.TypeOf(resp))

    if err != nil {
        fmt.Println(err)
        return
    }

    var json_token string

    if resp != nil {
        defer resp.Body.Close()
        var byteArray, _ = ioutil.ReadAll( resp.Body )
        json_token = string( byteArray )
        //fmt.Println( "ログイン成功!!!" )
        fmt.Println( json_token )
        autogenerated := new(AutoGenerated)
        if err := json.Unmarshal(byteArray, &autogenerated); err != nil {
            log.Fatal(err)
        }
    } else {
        fmt.Println( err.Error() )
        return
    }

}
